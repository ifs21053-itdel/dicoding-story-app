{"version":3,"file":"app~b6cdbb5c.bundle.js","mappings":"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","sources":["webpack://dicoding-story-app/./src/scripts/utils/notification-helper.js"],"sourcesContent":["import CONFIG from '../data/config';\r\nimport Auth from '../utils/auth';\r\n\r\nconst NotificationHelper = {\r\n  _isSubscribed: false,\r\n  _subscription: null,\r\n  _toastTimeout: null,\r\n\r\n  async init() {\r\n    console.log('Initializing NotificationHelper...');\r\n    \r\n    // Check if notifications are supported\r\n    if (!('Notification' in window)) {\r\n      console.warn('This browser does not support notifications');\r\n      return;\r\n    }\r\n\r\n    // Check if service worker is supported\r\n    if (!('serviceWorker' in navigator)) {\r\n      console.warn('This browser does not support service workers');\r\n      return;\r\n    }\r\n\r\n    // Check if push messaging is supported\r\n    if (!('PushManager' in window)) {\r\n      console.warn('This browser does not support push messaging');\r\n      return;\r\n    }\r\n\r\n    // Initialize push notifications\r\n    await this._initializePushNotifications();\r\n  },\r\n\r\n  async _initializePushNotifications() {\r\n    try {\r\n      // Wait for service worker to be ready\r\n      const registration = await navigator.serviceWorker.ready;\r\n      console.log('Service worker ready for push notifications');\r\n\r\n      // Check current subscription\r\n      const subscription = await registration.pushManager.getSubscription();\r\n      this._subscription = subscription;\r\n      this._isSubscribed = subscription !== null;\r\n\r\n      console.log('Current subscription status:', this._isSubscribed);\r\n\r\n      // If user is logged in and not subscribed, request permission\r\n      if (Auth.isLoggedIn() && !this._isSubscribed) {\r\n        await this.requestNotificationPermission();\r\n      }\r\n\r\n      // If already subscribed, make sure server knows about it\r\n      if (this._isSubscribed && subscription) {\r\n        await this._syncSubscriptionWithServer(subscription);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error initializing push notifications:', error);\r\n    }\r\n  },\r\n\r\n  async requestNotificationPermission() {\r\n    console.log('Requesting notification permission...');\r\n    \r\n    // Check current permission\r\n    let permission = Notification.permission;\r\n    \r\n    if (permission === 'denied') {\r\n      console.warn('Notification permission denied');\r\n      this._showPermissionDeniedMessage();\r\n      return false;\r\n    }\r\n\r\n    if (permission === 'default') {\r\n      // Request permission\r\n      permission = await Notification.requestPermission();\r\n    }\r\n\r\n    if (permission === 'granted') {\r\n      console.log('Notification permission granted');\r\n      await this._subscribeUserToPush();\r\n      return true;\r\n    } else {\r\n      console.warn('Notification permission not granted');\r\n      return false;\r\n    }\r\n  },\r\n\r\n  async _subscribeUserToPush() {\r\n    try {\r\n      const registration = await navigator.serviceWorker.ready;\r\n      \r\n      // Subscribe user to push notifications\r\n      const subscription = await registration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: this._urlBase64ToUint8Array(CONFIG.VAPID_PUBLIC_KEY),\r\n      });\r\n\r\n      console.log('User subscribed to push notifications:', subscription);\r\n      \r\n      // IMPORTANT: Validate subscription object\r\n      if (!subscription) {\r\n        throw new Error('Subscription is null');\r\n      }\r\n      \r\n      // Log subscription details for debugging\r\n      console.log('Subscription endpoint:', subscription.endpoint);\r\n      console.log('Subscription keys:', subscription.keys);\r\n      console.log('Keys p256dh:', subscription.keys?.p256dh);\r\n      console.log('Keys auth:', subscription.keys?.auth);\r\n\r\n      this._subscription = subscription;\r\n      this._isSubscribed = true;\r\n\r\n      // Send subscription to server\r\n      await this._sendSubscriptionToServer(subscription);\r\n\r\n      // Show success message\r\n      this.showLocalNotification(\r\n        'Notifications Enabled!', \r\n        'You will now receive notifications when you add new stories.'\r\n      );\r\n\r\n      return subscription;\r\n    } catch (error) {\r\n      console.error('Failed to subscribe user to push:', error);\r\n      this._isSubscribed = false;\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async _sendSubscriptionToServer(subscription) {\r\n    try {\r\n      const response = await this.subscribeNotification(subscription);\r\n      \r\n      if (response.error) {\r\n        throw new Error(response.message);\r\n      }\r\n      \r\n      console.log('Subscription sent to server successfully');\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Failed to send subscription to server:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async _syncSubscriptionWithServer(subscription) {\r\n    try {\r\n      // Silently sync subscription with server\r\n      await this._sendSubscriptionToServer(subscription);\r\n    } catch (error) {\r\n      console.warn('Failed to sync subscription with server:', error);\r\n    }\r\n  },\r\n\r\n  async unsubscribeFromPush() {\r\n    try {\r\n      if (!this._subscription) {\r\n        console.log('No subscription to unsubscribe from');\r\n        return;\r\n      }\r\n\r\n      // Unsubscribe from push service\r\n      await this._subscription.unsubscribe();\r\n      \r\n      // Notify server\r\n      await this.unsubscribeNotification(this._subscription.endpoint);\r\n\r\n      this._subscription = null;\r\n      this._isSubscribed = false;\r\n\r\n      console.log('Successfully unsubscribed from push notifications');\r\n      \r\n      this.showLocalNotification(\r\n        'Notifications Disabled', \r\n        'You will no longer receive push notifications.'\r\n      );\r\n\r\n    } catch (error) {\r\n      console.error('Failed to unsubscribe from push:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // FIXED: API Methods dengan validasi subscription object\r\n  async subscribeNotification(subscription) {\r\n    const token = Auth.getToken();\r\n    \r\n    if (!token) {\r\n      throw new Error('No authentication token available');\r\n    }\r\n    \r\n    if (!subscription) {\r\n      throw new Error('Subscription object is null or undefined');\r\n    }\r\n    \r\n    if (!subscription.endpoint) {\r\n      throw new Error('Subscription endpoint is missing');\r\n    }\r\n    \r\n    // CRITICAL FIX: Validasi dan konversi keys\r\n    let keys;\r\n    if (subscription.keys) {\r\n      // Browser modern (Chrome, Firefox, etc.)\r\n      keys = {\r\n        p256dh: subscription.keys.p256dh,\r\n        auth: subscription.keys.auth,\r\n      };\r\n    } else if (subscription.getKey) {\r\n      // Fallback untuk browser lama\r\n      try {\r\n        const p256dhKey = subscription.getKey('p256dh');\r\n        const authKey = subscription.getKey('auth');\r\n        \r\n        keys = {\r\n          p256dh: p256dhKey ? this._arrayBufferToBase64(p256dhKey) : null,\r\n          auth: authKey ? this._arrayBufferToBase64(authKey) : null,\r\n        };\r\n      } catch (error) {\r\n        console.error('Error getting keys from subscription:', error);\r\n        throw new Error('Unable to extract subscription keys');\r\n      }\r\n    } else {\r\n      throw new Error('Subscription keys are not available');\r\n    }\r\n    \r\n    // Validasi keys\r\n    if (!keys.p256dh || !keys.auth) {\r\n      console.error('Invalid keys:', keys);\r\n      throw new Error('Subscription keys (p256dh or auth) are missing');\r\n    }\r\n    \r\n    console.log('Sending subscription to server:', {\r\n      endpoint: subscription.endpoint,\r\n      keys: keys\r\n    });\r\n    \r\n    const response = await fetch(`${CONFIG.BASE_URL}/notifications/subscribe`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        endpoint: subscription.endpoint,\r\n        keys: keys,\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n    }\r\n    \r\n    return response.json();\r\n  },\r\n\r\n  async unsubscribeNotification(endpoint) {\r\n    const token = Auth.getToken();\r\n    \r\n    if (!token) {\r\n      throw new Error('No authentication token available');\r\n    }\r\n    \r\n    if (!endpoint) {\r\n      throw new Error('Endpoint is required for unsubscription');\r\n    }\r\n    \r\n    const response = await fetch(`${CONFIG.BASE_URL}/notifications/subscribe`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        endpoint,\r\n      }),\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(`HTTP ${response.status}: ${errorText}`);\r\n    }\r\n    \r\n    return response.json();\r\n  },\r\n\r\n  // Helper function untuk convert ArrayBuffer ke Base64\r\n  _arrayBufferToBase64(buffer) {\r\n    const bytes = new Uint8Array(buffer);\r\n    let binary = '';\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  },\r\n\r\n  // Show local notification (fallback)\r\n  showLocalNotification(title, body, options = {}) {\r\n    if (Notification.permission === 'granted') {\r\n      const notification = new Notification(title, {\r\n        body,\r\n        icon: '/images/icons/web-app-manifest-192x192.png',\r\n        badge: '/images/icons/web-app-manifest-192x192.png',\r\n        tag: 'local-notification',\r\n        ...options\r\n      });\r\n\r\n      // Auto close after 5 seconds\r\n      setTimeout(() => {\r\n        notification.close();\r\n      }, 5000);\r\n\r\n      return notification;\r\n    } else {\r\n      // Fallback to toast notification\r\n      this.showToast(`${title}: ${body}`);\r\n    }\r\n  },\r\n\r\n  // Show notification via service worker\r\n  async showServiceWorkerNotification(title, options = {}) {\r\n    try {\r\n      const registration = await navigator.serviceWorker.ready;\r\n      \r\n      await registration.showNotification(title, {\r\n        body: options.body || '',\r\n        icon: options.icon || '/images/icons/web-app-manifest-192x192.png',\r\n        badge: options.badge || '/images/icons/web-app-manifest-192x192.png',\r\n        tag: options.tag || 'sw-notification',\r\n        data: options.data || {},\r\n        actions: options.actions || [\r\n          {\r\n            action: 'view',\r\n            title: 'View'\r\n          },\r\n          {\r\n            action: 'close',\r\n            title: 'Close'\r\n          }\r\n        ],\r\n        ...options\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to show service worker notification:', error);\r\n      // Fallback to local notification\r\n      this.showLocalNotification(title, options.body || '', options);\r\n    }\r\n  },\r\n\r\n  // Simulate push notification (for testing)\r\n  async simulatePushNotification(title, body) {\r\n    await this.showServiceWorkerNotification(title, {\r\n      body,\r\n      tag: 'test-notification',\r\n      data: { url: '/' }\r\n    });\r\n  },\r\n\r\n  // Toast notification for UI feedback\r\n  showToast(message, duration = 3000) {\r\n    console.log('ShowToast called with message:', message);\r\n    \r\n    const notification = document.getElementById('notification');\r\n    const notificationMessage = document.getElementById('notificationMessage');\r\n    const notificationClose = document.getElementById('notificationClose');\r\n\r\n    if (!notification || !notificationMessage || !notificationClose) {\r\n      console.warn('Toast notification elements not found in DOM');\r\n      // Fallback: show browser alert if DOM elements not found\r\n      if (typeof message === 'string') {\r\n        alert(message);\r\n      }\r\n      return;\r\n    }\r\n\r\n    notificationMessage.textContent = message;\r\n    notification.classList.remove('hidden');\r\n\r\n    // Clear existing timeout\r\n    if (this._toastTimeout) {\r\n      clearTimeout(this._toastTimeout);\r\n    }\r\n\r\n    // Auto hide\r\n    this._toastTimeout = setTimeout(() => {\r\n      notification.classList.add('hidden');\r\n    }, duration);\r\n\r\n    // Manual close\r\n    const closeHandler = () => {\r\n      notification.classList.add('hidden');\r\n      if (this._toastTimeout) {\r\n        clearTimeout(this._toastTimeout);\r\n      }\r\n      notificationClose.removeEventListener('click', closeHandler);\r\n    };\r\n\r\n    notificationClose.removeEventListener('click', closeHandler);\r\n    notificationClose.addEventListener('click', closeHandler);\r\n  },\r\n\r\n  // Show notification (legacy method for compatibility)\r\n  showNotification(title, options) {\r\n    if (!('Notification' in window)) {\r\n      console.log('Notification not supported in this browser');\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission === 'granted') {\r\n      navigator.serviceWorker.ready.then((registration) => {\r\n        registration.showNotification(title, options);\r\n      });\r\n    } else {\r\n      console.log('Notification permission denied');\r\n    }\r\n  },\r\n\r\n  // Permission denied message\r\n  _showPermissionDeniedMessage() {\r\n    this.showToast(\r\n      'Notifications are blocked. Please enable them in your browser settings to receive notifications.',\r\n      5000\r\n    );\r\n  },\r\n\r\n  // Utility function to convert VAPID key\r\n  _urlBase64ToUint8Array(base64String) {\r\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; i++) {\r\n      outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n\r\n    return outputArray;\r\n  },\r\n\r\n  // Getters\r\n  get isSubscribed() {\r\n    return this._isSubscribed;\r\n  },\r\n\r\n  get subscription() {\r\n    return this._subscription;\r\n  },\r\n\r\n  get permission() {\r\n    return Notification.permission;\r\n  }\r\n};\r\n\r\nexport default NotificationHelper;"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_isSubscribed","_subscription","_toastTimeout","init","_this","_callee","_context","console","log","window","warn","navigator","_initializePushNotifications","_this2","_callee2","registration","subscription","_context2","serviceWorker","ready","pushManager","getSubscription","Auth","isLoggedIn","requestNotificationPermission","_syncSubscriptionWithServer","t0","error","_this3","_callee3","permission","_context3","Notification","_showPermissionDeniedMessage","requestPermission","_subscribeUserToPush","_this4","_callee4","_subscription$keys","_subscription$keys2","_context4","subscribe","userVisibleOnly","applicationServerKey","_urlBase64ToUint8Array","CONFIG","VAPID_PUBLIC_KEY","endpoint","p256dh","auth","_sendSubscriptionToServer","showLocalNotification","_this5","_callee5","response","_context5","subscribeNotification","message","_this6","_callee6","_context6","unsubscribeFromPush","_this7","_callee7","_context7","unsubscribe","unsubscribeNotification","_this8","_callee8","token","p256dhKey","authKey","errorText","_context8","getToken","getKey","_arrayBufferToBase64","fetch","concat","BASE_URL","headers","Authorization","body","JSON","stringify","ok","text","status","json","_callee9","_context9","buffer","bytes","Uint8Array","binary","byteLength","String","fromCharCode","btoa","title","options","undefined","notification","_objectSpread","icon","badge","tag","setTimeout","close","this","showToast","showServiceWorkerNotification","_arguments","_this9","_callee10","_context10","showNotification","data","actions","action","simulatePushNotification","_this10","_callee11","_context11","url","_this11","duration","document","getElementById","notificationMessage","notificationClose","alert","textContent","classList","remove","clearTimeout","add","_closeHandler","removeEventListener","addEventListener","base64String","base64","repeat","replace","rawData","atob","outputArray","charCodeAt","isSubscribed"],"sourceRoot":""}